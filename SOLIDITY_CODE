// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SafeTransfer {
    event Deposit(address indexed from, uint amount);
    event Transfer(address indexed from, address indexed to, uint amount);

    receive() external payable {
        emit Deposit(msg.sender, msg.value);
    }

    function getContractBalance() public view returns (uint) {
        return address(this).balance;
    }

    function eoaToAny(address payable recipient) public payable {
        require(msg.value > 0, "Send some ETH");
        recipient.transfer(msg.value);
        emit Transfer(msg.sender, recipient, msg.value);
    }

    function contractToAny(address payable recipient, uint amount) public {
        require(amount > 0, "Amount must be > 0");
        require(address(this).balance >= amount, "Insufficient contract balance");
        recipient.transfer(amount);
        emit Transfer(address(this), recipient, amount);
    }
}

